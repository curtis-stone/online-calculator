*, *::before, *::after {
    box-sizing: border box;
    font-family: Verdana, sans-serif;
    font-weight: normal;
}
body {
    padding: 0;
    margin: 0;
    background: linear-gradient(to right, rgb(0, 0, 0), rgba(0, 0, 0));
}

.calculator-grid{
    display: grid;
    justify-content: center;
    align-content: center;
    height: 100vh; /* fills 100% of view height, all the time */
    grid-template-columns: repeat(4, 100px);
    grid-template-rows: minmax(120px,auto)repeat(5, 100px);
    /* minmax: smallest is 120px, largets is as much space needed to fit numbers. 5 columns 100px wide */
}

.number {
    cursor: pointer;
    font-size: 2rem;
    outline: none;
    background-color: rgba(31, 31, 31, 0.753);
    color: white;
    border: 2px solid black;
}

.operator {cursor: pointer;
    font-size: 2rem;
    outline: none;
    color: white;
    border: 2px solid black;
    background-color:rgb(255, 145, 0)
}

.clears {
    cursor: pointer;
    font-size: 2rem;
    outline: none;
    background-color: rgb(149, 149, 149);
    color: black;
    border: 2px solid black;
}

.span-two {
    cursor: pointer;
    font-size: 2rem;
    outline: none;
    background-color: rgb(149, 149, 149);
    color: black;
    border: 2px solid black;
}

.calculator-grid > button:hover {
    background-color: rgba(60, 60, 60, 0.753);
}

.span-two {
    grid-column: span 2;
}

.output {
    grid-column: 1 / -1;
    background-color: rgba(138, 137, 137, 0.100);
    border: 20px rgba(0, 0, 0, 0.753);
    display: flex;
    align-items: flex-end;
    justify-content: space-around;
    flex-direction: column;
    padding: 10px;
    word-wrap: break-word; /* allows where we want to break our word */
    word-break: break-all /*makes a break be able to happen anywhere*/
}

.output .previous-operand {
    color: rgb(255, 145, 0);
    font-size: 1.5rem;
}

.output .current-operand {
    color: white;
    font-size: 2.5rem;
}